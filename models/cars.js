// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Cars = sequelize.define('cars', {
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
    name: {
      type: DataTypes.STRING,
    },
    model: {
      type: DataTypes.STRING,
    },
    company: {
      type: DataTypes.STRING,
    },
    power: {
      type: DataTypes.INTEGER,
    },
    places: {
      type: DataTypes.INTEGER,
    },
    petAccepted: {
      type: DataTypes.BOOLEAN,
    },
  }, {
    tableName: 'cars',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Cars.associate = (models) => {
    Cars.belongsTo(models.users, {
      foreignKey: {
        name: 'ownerIdKey',
        field: 'owner_id',
      },
      as: 'owner',
    });
    Cars.hasMany(models.drives, {
      foreignKey: {
        name: 'carIdKey',
        field: 'car_id',
      },
      as: 'drives',
    });
  };

  return Cars;
};
